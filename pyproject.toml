[project]
name = "netlify-python"
description = "Bare-bones python library for the official Netlify API"
authors = [
  { name="Chris Brousseau", email="cbrews@users.noreply.github.com" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.10"
dynamic = ["version"]
dependencies = [
  "httpx>=0.23.0",
  "python-dateutil>=2.8.2",
]
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Libraries",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
]
keywords = [
  "http", 
  "netlify", 
  "client-library",
]

[project.optional-dependencies]
dev = [
  "black==22.10.0",
  "mypy==0.990",
  "pylint==2.15.5",
  "isort==5.10.1",
  "pytest==7.2.0",
  "types-python-dateutil==2.8.19.2",
  "pytest-cov==4.0.0",
  "pytest-httpx==0.21.2",
]
build = [
  "build",
  "twine",
]

[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'


[tool.hatch.version]
path = "netlify/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    '/README.md',
    '/LICENSE',
    '/netlify',
]

[tool.isort]
profile = "black"


[tool.mypy]
python_version = "3.10"

warn_unused_configs = true
warn_redundant_casts = true

strict_optional = true
check_untyped_defs = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false


[tool.coverage.run]
omit = [
  "*/__main__.py"
]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
  "pragma: no cover",
  "raise NotImplementedError",
  "def __repr__",
  "raise AssertionError",
  "if 0:",
  "if __name__ == .__main__.:",
  "@(abc.)?abstractmethod",
]